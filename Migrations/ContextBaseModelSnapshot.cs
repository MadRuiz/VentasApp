// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VentasApp.Models;

namespace VentasApp.Migrations
{
    [DbContext(typeof(ContextBase))]
    partial class ContextBaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("VentasApp.Models.Categorias", b =>
                {
                    b.Property<int>("Id_Categoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1000);

                    b.HasKey("Id_Categoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("VentasApp.Models.DetalleVentas", b =>
                {
                    b.Property<int>("Id_DetalleVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id_Producto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id_Venta")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProductoId_Producto")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Subtotal")
                        .HasColumnType("REAL");

                    b.Property<int?>("VentaId_Venta")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id_DetalleVenta");

                    b.HasIndex("ProductoId_Producto");

                    b.HasIndex("VentaId_Venta");

                    b.ToTable("DetalleVentas");
                });

            modelBuilder.Entity("VentasApp.Models.Productos", b =>
                {
                    b.Property<int>("Id_Producto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoriaId_Categoria")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha_Vencimiento")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id_Categoria")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.HasKey("Id_Producto");

                    b.HasIndex("CategoriaId_Categoria");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("VentasApp.Models.Tiendas", b =>
                {
                    b.Property<int>("Id_Tienda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Contacto")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1000);

                    b.Property<string>("Encargado")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("Id_Tienda");

                    b.ToTable("Tiendas");
                });

            modelBuilder.Entity("VentasApp.Models.Ventas", b =>
                {
                    b.Property<int>("Id_Venta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codigo_Factura")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Id_Tienda")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre_Cliente")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int?>("TiendaId_Tienda")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Total")
                        .HasColumnType("REAL");

                    b.HasKey("Id_Venta");

                    b.HasIndex("TiendaId_Tienda");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("VentasApp.Models.DetalleVentas", b =>
                {
                    b.HasOne("VentasApp.Models.Productos", "Producto")
                        .WithMany("Detalle")
                        .HasForeignKey("ProductoId_Producto");

                    b.HasOne("VentasApp.Models.Ventas", "Venta")
                        .WithMany("Detalle")
                        .HasForeignKey("VentaId_Venta");
                });

            modelBuilder.Entity("VentasApp.Models.Productos", b =>
                {
                    b.HasOne("VentasApp.Models.Categorias", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId_Categoria");
                });

            modelBuilder.Entity("VentasApp.Models.Ventas", b =>
                {
                    b.HasOne("VentasApp.Models.Tiendas", "Tienda")
                        .WithMany("Ventas")
                        .HasForeignKey("TiendaId_Tienda");
                });
#pragma warning restore 612, 618
        }
    }
}
